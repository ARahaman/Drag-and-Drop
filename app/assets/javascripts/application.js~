// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
// GO AFTER THE REQUIRES BELOW.
//
//= require jquery
//= require jquery_ujs
//= require_tree .

 $(function() {
		$("#show_all").click(function(){
    		$(".ui-widget-content").show();
		});
		$(".category_div").click(function(){
		  	var cur=($(this).children()).attr('id');
				$(".ui-widget-content").hide();
		  	$("#"+cur	+"div").toggle();	
		});
		$(".ui-icon").hide();
    $( "#task_list" ).accordion();
    $( "#task_list li" ).draggable({
        appendTo: "body",
        helper: "clone",
			  cursor: "pointer"
    });
    $(".category ol" ).droppable({
        activeClass: "ui-state-default",
        hoverClass: "ui-state-hover",
        accept: ":not(.ui-sortable-helper)",
        drop: function( event, ui ) {
          $( this ).find( ".placeholder" ).remove();
          $( "<li></li>" ).text( ui.draggable.text() ).appendTo( this );
				//alert('Task: '+ui.draggable.attr('id')+" Category: "+($(this).parent()).parent().attr('id'));
				  var category_id=($(this).parent()).parent().attr('id');
				  $("#task_id").val(ui.draggable.attr('id'));
				  $("#category_id").val(category_id);
				  $("#task_assign_form").submit();
         }
    }).sortable({
        items: "li:not(.placeholder)",
        sort: function() {
          $( this ).removeClass( "ui-state-default" );
        }
      });
    });

